<?xml version="1.0" encoding="UTF-8" ?>
<testsuites>
<testsuite name="MathUtils" errors="0" tests="0" failures="0" time="0" timestamp="2016-10-18T16:02:12">
</testsuite>
<testsuite name="MathUtils.when calc is used to peform basic math operations" errors="0" tests="6" failures="6" time="0.009" timestamp="2016-10-18T16:02:12">
  <testcase classname="MathUtils.when calc is used to peform basic math operations" name="Be sure to define a for loop with a varible like this for (var i = 0;" time="0.002"><failure type="expect" message="Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;for&amp;apos;.">Error: Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;for&amp;apos;.
    at new jasmine.ExpectationResult (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:114:32)
    at null.toContain (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1316:29)
    at null.&amp;lt;anonymous&amp;gt; (C:\Ampps\www\Javanew\Ph2\Template\Python27\Punit\jasmine\spec\C3Q1_spec.js:28:34)
    at jasmine.Block.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1145:17)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at jasmine.Queue.start (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2130:8)
    at jasmine.Spec.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2458:14)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at jasmine.Queue.start (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2130:8)
    at jasmine.Suite.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2604:14)</failure></testcase>
  <testcase classname="MathUtils.when calc is used to peform basic math operations" name="How long the for loop should be run needs to be defined like this for (var i = 0; i &amp;lt; infix.length - 1;" time="0"><failure type="expect" message="Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;infix.length&amp;apos;.">Error: Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;infix.length&amp;apos;.
    at new jasmine.ExpectationResult (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:114:32)
    at null.toContain (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1316:29)
    at null.&amp;lt;anonymous&amp;gt; (C:\Ampps\www\Javanew\Ph2\Template\Python27\Punit\jasmine\spec\C3Q1_spec.js:31:34)
    at jasmine.Block.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1145:17)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at jasmine.Queue.start (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2130:8)
    at jasmine.Spec.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2458:14)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at onComplete (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2173:18)
    at jasmine.Spec.finish (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2432:5)</failure></testcase>
  <testcase classname="MathUtils.when calc is used to peform basic math operations" name="Remember to make the varible increase in value like this for (var i = 0; i &amp;lt; array.length - 1; i++) this completes the for loop" time="0"><failure type="expect" message="Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;++&amp;apos;.">Error: Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;++&amp;apos;.
    at new jasmine.ExpectationResult (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:114:32)
    at null.toContain (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1316:29)
    at null.&amp;lt;anonymous&amp;gt; (C:\Ampps\www\Javanew\Ph2\Template\Python27\Punit\jasmine\spec\C3Q1_spec.js:34:34)
    at jasmine.Block.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1145:17)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at jasmine.Queue.start (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2130:8)
    at jasmine.Spec.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2458:14)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at onComplete (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2173:18)
    at jasmine.Spec.finish (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2432:5)</failure></testcase>
  <testcase classname="MathUtils.when calc is used to peform basic math operations" name="Each index of the input array need to be defined like this var something = infix[i] i is the for loop variable" time="0"><failure type="expect" message="Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;infix[&amp;apos;.">Error: Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;infix[&amp;apos;.
    at new jasmine.ExpectationResult (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:114:32)
    at null.toContain (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1316:29)
    at null.&amp;lt;anonymous&amp;gt; (C:\Ampps\www\Javanew\Ph2\Template\Python27\Punit\jasmine\spec\C3Q1_spec.js:38:34)
    at jasmine.Block.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1145:17)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at jasmine.Queue.start (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2130:8)
    at jasmine.Spec.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2458:14)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at onComplete (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2173:18)
    at jasmine.Spec.finish (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2432:5)</failure></testcase>
  <testcase classname="MathUtils.when calc is used to peform basic math operations" name="Your if stetment needs to check wther the input is a number or not using the isNumeric() function like this: if (isNumeric(token) == true){whatever code tou wish to excute if the input is a number}" time="0"><failure type="expect" message="Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;if(isNumeric(&amp;apos;.">Error: Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;if(isNumeric(&amp;apos;.
    at new jasmine.ExpectationResult (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:114:32)
    at null.toContain (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1316:29)
    at null.&amp;lt;anonymous&amp;gt; (C:\Ampps\www\Javanew\Ph2\Template\Python27\Punit\jasmine\spec\C3Q1_spec.js:42:35)
    at jasmine.Block.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1145:17)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at jasmine.Queue.start (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2130:8)
    at jasmine.Spec.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2458:14)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at onComplete (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2173:18)
    at jasmine.Spec.finish (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2432:5)</failure></testcase>
  <testcase classname="MathUtils.when calc is used to peform basic math operations" name="If the input is a number deturmined by the isNumeric and the if statment you need to push it onto the postfixStack like this: postfixStack.push(Number(token)) token is the name of each index of the input array" time="0"><failure type="expect" message="Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;postfixStack.push(Number(&amp;apos;.">Error: Expected &amp;apos;function(x){functionMathSolver(infix){varpostfixStack=[];postfixStack=[];functionisNumeric(x){return!isNaN(parseFloat(x))&amp;&amp;isFinite(x);}returnpostfixStack;}MathSolver([&amp;quot;4&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;5&amp;quot;,&amp;quot;*&amp;quot;,&amp;quot;2&amp;quot;]);}&amp;apos; to contain &amp;apos;postfixStack.push(Number(&amp;apos;.
    at new jasmine.ExpectationResult (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:114:32)
    at null.toContain (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1316:29)
    at null.&amp;lt;anonymous&amp;gt; (C:\Ampps\www\Javanew\Ph2\Template\Python27\Punit\jasmine\spec\C3Q1_spec.js:46:35)
    at jasmine.Block.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:1145:17)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at jasmine.Queue.start (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2130:8)
    at jasmine.Spec.execute (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2458:14)
    at jasmine.Queue.next_ (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2177:31)
    at onComplete (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2173:18)
    at jasmine.Spec.finish (C:\Users\Ragnar\AppData\Roaming\npm\node_modules\jasmine-node\lib\jasmine-node/jasmine-1.3.1.js:2432:5)</failure></testcase>
</testsuite>
</testsuites>